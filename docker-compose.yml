version: '3'
services:
# services
  eureka-service:
    container_name: eureka-service
    build:
      context: ./EurekaService/
      dockerfile: Docker
    image: eureka-service:latest
    restart: always
    expose:
      - 8761
    ports:
      - 8761:8761
    networks:
      - events

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
    networks: 
      - events
  db:
    container_name: db
    image: "postgres"
    environment:
      POSTGRES_DB: SystemEventsDatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: 
      - 5432
    expose:
      - 5432
    networks:
      - events
  
  event-service-db:
    container_name: event-service-db
    image: "postgres"
    environment:
      POSTGRES_DB: EventDatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: 
      - 5432
    expose:
      - 5432
    networks:
      - events
  
  user-service-db:
    container_name: user-service-db
    image: "postgres"
    environment:
      POSTGRES_DB: UserDatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: 
      - 5432
    expose:
      - 5432
    networks:
      - events
  
  user-ticket-service-db:
    container_name: user-ticket-service-db
    image: "postgres"
    environment:
      POSTGRES_DB: UserTicketDatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: 
      - 5432
    expose:
      - 5432
    networks:
      - events
      
  notification-service-db:
    container_name: notification-service-db
    image: "postgres"
    environment:
      POSTGRES_DB: NotificationServiceDatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: 
      - 5432
    expose:
      - 5432
    networks:
      - events


  

  system-events-service:
    container_name: system-events-service
    build:
      context: ./SystemEvents/
      dockerfile: Docker
    image: system-events:latest
    restart: always
    links:
      - eureka-service:eureka-service
      - db:db
    expose:
      - 8085
    ports:
      - 8085:8085 
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=SystemEventsDatabase
      - DATABASE_PORT=5432
    depends_on:
      - db 
      - eureka-service
    networks:
      - events

  user-service:
    container_name: user-service
    build:
      context: ./UserService/
      dockerfile: Dockerfile
    image: user-service:latest
    restart: always
    links:
      - eureka-service:eureka-service
      - user-service-db:user-service-db
    expose:
      - 8080
    ports:
      - 8080:8080 
    environment:
      - DATABASE_HOST=user-service-db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=UserDatabase
      - DATABASE_PORT=5432
    depends_on:
      - user-service-db 
      - eureka-service
    networks:
      - events
      
  user-ticket-service:
    container_name: user-ticket-service
    build:
      context: ./UserTicketService/
      dockerfile: Dockerfile
    image: user-ticket-service:latest
    restart: always
    links:
      - eureka-service:eureka-service
      - user-ticket-service-db:user-ticket-service-db
    expose:
      - 8081
    ports:
      - 8081:8081 
    environment:
      - DATABASE_HOST=user-ticket-service-db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=UserTicketDatabase
      - DATABASE_PORT=5432
    depends_on:
      - user-ticket-service-db 
      - eureka-service
      - system-events-service
    networks:
      - events

  notification-service:
    container_name: notification-service
    build:
      context: ./NotificationService/
      dockerfile: Dockerfile
    image: notification-service:latest
    restart: always
    links:
      - eureka-service:eureka-service
      - notification-service-db:notification-service-db
      - rabbitmq:rabbitmq
    expose:
      - 8083
    ports:
      - 8083:8083 
    environment:
      - DATABASE_HOST=notification-service-db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=NotificationServiceDatabase
      - DATABASE_PORT=5432
      - AMQP_URL='amqp://rabbitmq?connection_attempts=5&retry_delay=5'
    depends_on:
      - notification-service-db 
      - eureka-service
      - rabbitmq
    networks:
      - events

  event-service:
    container_name: event-service
    build:
      context: ./EventService/
      dockerfile: Dockerfile
    image: event-service:latest
    restart: always
    links:
      - eureka-service:eureka-service
      - event-service-db:event-service-db
      - rabbitmq:rabbitmq
    expose:
      - 8082
    ports:
      - 8082:8082 
    environment:
      - DATABASE_HOST=event-service-db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=EventDatabase
      - DATABASE_PORT=5432
      - AMQP_URL='amqp://rabbitmq?connection_attempts=5&retry_delay=5'
    depends_on:
      - event-service-db 
      - eureka-service
      - rabbitmq
      - system-events-service
    networks:
      - events

  zuul-gateway:
    container_name: zuul-gateway
    build:
      context: ./ZuulGateway/
      dockerfile: Dockerfile
    image: zuul-gateway:latest
    restart: always
    links:
      - eureka-service:eureka-service
    expose:
      - 8090
    ports:
      - 8090:8090 
    depends_on: 
      - eureka-service
      - event-service
      - notification-service
      - user-ticket-service
      - user-service
      - system-events-service
    networks:
      - events

  events-frontend:
    container_name: events-frontend
    build:
      context: ./Events-Frontend/Events/
      dockerfile: Dockerfile
    image: events-frontend:latest
    restart: always
    expose:
      - 80
    ports:
      - 80:80 
    networks:
      - events
    
    
networks:
  events:
    driver: bridge